type Query {
    bookById(id: ID): Book
    allBooks(minQuantity: Int): [Book]
    currentUser: User
    allUsers: [User]
    basketByUserId(userId: ID): Basket
    boughtBooksByUserId(userId: ID): [BoughtBook]
    allAuthors: [Author]
    allCategories: [Category]
    allPublishers: [Publisher]
}

type Mutation {
    login(username: String, password: String): User
    register(username: String, email: String, password: String): User
    logout: Boolean,
    addBookToCart(bookId: ID!, userId: ID!, quantity: Int!): Basket
    changeBookQuantityInCart(bookId: ID!, userId: ID!, quantity: Int!): Basket
    removeBookFromCart(bookId: ID!, userId: ID!): Basket
    buyBooks(userId: ID!): Basket
    addBookToStock(bookId: ID!, quantity: Int!): Book
    changeBookPrice(bookId: ID!, newPrice: Float!): Book
    changeUserPassword(userId: ID!, newPassword: String!): User
    changeUserRole(userId: ID!, newRole: String!): User
    addAuthor(firstName: String!, lastName: String!): Author
    addCategory(name: String!): Category
    addPublisher(name: String!): Publisher
    addBook(
        title: String!,
        price: Float!,
        publicationDate: String!,
        pageCount: Int!,
        ISBN: String!,
        description: String,
        quantity: Int!,
        publisherId: ID,
        authorIds: [ID],
        categoryIds: [ID]): Book
}

type Book {
    id: ID!
    title: String!
    price: Float!
    ISBN: String!
    description: String
    publicationDate: String!
    pageCount: Int!
    authors: [Author]
    categories: [Category]
    publisher: Publisher
    image: UploadedImage
    quantity: Int!
}

type Author {
    id: ID
    firstName: String
    lastName: String
    books: [Book]
}

type Category {
    id: ID
    name: String
    books: [Book]
}

type Publisher {
    id: ID
    name: String
    books: [Book]
}

type User {
    id: ID
    username: String
    email: String
    password: String
    role: String
}


type Basket {
    id: ID
    user: User
    books: [BookBasket]
}

type BookBasket {
    id: ID!
    book: Book!
    quantity: Int!
}

type BoughtBook {
    id: ID!
    user: User!
    book: Book!
    quantity: Int!
}


type UploadedImage {
    filename: String
    type: String
    content: String
}